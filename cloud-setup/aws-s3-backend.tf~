// aws-s3-backend.tf -- define the s3 backend for terraform state
//================================================== S3 BACKEND
resource "aws_s3_bucket" "tf-backend" {
  bucket = "ov-cloudops-test-cloud-setup-tfstate-backend"
  acl    = "private"

#  lifecycle {
#    prevent_destroy = true
#  }

  versioning {
    enabled = true
  }

  server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        sse_algorithm = "AES256"
      }
    }
  }
}

resource "aws_dynamodb_table" "tf_locks" {
  name         = "ov-cloudops-test-cloud-setup-tfstate-backend-locks"
  billing_mode = "PAY_PER_REQUEST"
  hash_key     = "LockID"

  attribute {
    name       = "LockID"
    type       = "S"
  }
}

terraform {
  backend "local" {
    path = "./terraform.tfstate"
  }
}
# terraform {
#   backend "s3" {
#   bucket         = "ov-cloudops-test-cloud-setup-tfstate-backend"
#   key            = "global/s3/terraform.tfstate"
#   region         = var.aws_region
#   dynamodb_table = "ov-cloudops-test-cloud-setup-tfstate-backend-locks"
#   encrypt        = true
#   }
# }
# terraform {
#   backend "s3" {
#     bucket         = "ov-cloudops-test-cloud-setup-tfstate-backend"
#     key            = "vpc/terraform.tfstate"
#     region         = var.aws_region
#     profile        = "tesera"
#     dynamodb_table = "ov-cloudops-test-cloud-setup-tfstate-backend-locks"
#     encrypt        = true
#     kms_key_id     = "arn:aws:kms:${var.aws_region}:<account_id>:key/<key_id>"
#   }
# }
